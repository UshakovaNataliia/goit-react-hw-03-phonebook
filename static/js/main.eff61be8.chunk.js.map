{"version":3,"sources":["components/Form/index.js","components/Form/Form.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["Form","state","name","number","inputChange","e","target","value","setState","addContactItem","preventDefault","props","onSubmit","this","type","onChange","Component","ContactList","toFilter","onDelete","map","el","id","onClick","Filter","onFilter","filter","App","contacts","contact","prevState","some","toLowerCase","newContact","shortId","generate","alert","filterContacts","normalizeSearch","includes","deleteContact","filterInput","currentTarget","parseContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eff61be8.chunk.js","sourcesContent":["import Form from './Form';\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component { \n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n  inputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  addContactItem = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state); //add to this.state by submit\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.addContactItem}>\n          <label>\n            Name\n            <br/>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.inputChange}\n            />\n          </label>\n          <br/>\n          <br/>\n          <label>\n            Number\n            <br/>\n            <input\n              type=\"number\"\n              name=\"number\"\n              value={number}\n              onChange={this.inputChange}\n            />\n          </label>\n          <br/>\n          <br/>\n          <button type=\"submit\">Add contact</button>\n      </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  state: PropTypes.object,\n};\n\nexport default Form;","import ContactList from './ContactList';\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = props => {\n  const { toFilter, onDelete } = props;\n\n  return (\n    <ul>\n      {toFilter.map(el => {\n        const { name, number, id } = el;\n        return (\n          <li key={id}>\n            {' '}\n            {name}: {number}{' '}\n            <button type=\"button\" onClick={() => onDelete(id)}>\n              Delete\n            </button>\n            <br />\n            <br/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  toFilter: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import Filter from './Filter';\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({onFilter, filter}) => {\n  return (\n    <label>\n      Find contacts by name\n      <br/> \n      <input type=\"text\" name=\"filter\" value={filter} onChange={onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n}\n\nexport default Filter;","import App from './App.jsx';\n\nexport default App;\n","import React, { Component } from 'react';\nimport shortId from 'shortid';\nimport Form from '../Form';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nclass App extends Component { \n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  addContactItem = contact => {\n    this.setState(prevState => {\n      if (this.state.contacts.some(el => el.name === contact.name || el.name.toLowerCase() === contact.name)) {\n        alert(`${contact.name} is already in contacts`)\n      } else {\n        const newContact = {\n          name: contact.name,\n          number: contact.number,\n          id: shortId.generate(),\n        }\n        return { contacts: [...prevState.contacts, newContact] };\n\n      }\n    })\n  };\n  \n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeSearch = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeSearch),\n    );\n  };\n  deleteContact = contact => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(el => el.id !== contact),\n      };\n    });\n  };\n\n  filterInput = e => {\n    const { name, value } = e.currentTarget;\n    return this.setState({ [name]: value });\n  };\n\n  componentDidMount() {\n    const parseContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parseContacts) {\n      this.setState({contacts: parseContacts})\n    }\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n     return (\n       <>\n         <h1>Phonebook</h1>\n         <Form onSubmit={this.addContactItem}/>\n         <h2>Contacts</h2>\n         <Filter onFilter={this.filterInput} value={filter}/>\n         <ContactList toFilter={this.filterContacts()} onDelete={this.deleteContact}/>\n       </>\n    );\n  }\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}